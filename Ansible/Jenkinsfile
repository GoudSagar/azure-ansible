pipeline {
   agent {
      node {
        label 'slave_1'
      }
    }

    tools {
         maven 'MAVEN_HOME'
         jdk 'JAVA_HOME'
    }

    stages{
        stage('Git Checkout'){
            steps{
                checkout([$class: 'GitSCM', branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[credentialsId: 'github access', url: 'https://github.com/GoudSagar/azure-ansible.git']]])
            }
        }
        stage('build'){
            steps{
               sh '''
                mvn package
                '''
            }
        }
        stage ('Unit Test') {
	        steps {
                echo 'Running Unit Testing'
                sh '''
                mvn test
                '''
             }
         }
        stage('Application Deployment using Ansible') {
            parallel {
              stage('Webserver-DEV') {
                when {
                  expression { "$Env_Name" == 'DEV' }
                }
                steps {
                  echo 'Deploying in DEV Node On Tomcat Server'
                  sh 'ansible-playbook -i /var/lib/jenkins/inventory Ansible/webserver-dev-tomcat.yml -vv'
                 }       
              }   
               stage('Webserver-PROD') {
                 when {
                  expression { "$Env_Name" == 'PROD' }
                  }
                  steps {
                     echo 'Deploying in PROD Node On Tomcat Server'
                     sh 'ansible-playbook -i /var/lib/jenkins/inventory Ansible/webserver-prod-tomcat.yml -vv'
                  }       
               }
             }
        }
    }
}
